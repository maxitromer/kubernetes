## https://docs.percona.com/percona-operator-for-mysql/pxc/helm.html
## https://github.com/percona/percona-helm-charts
## https://github.com/percona/percona-helm-charts/tree/main/charts/pxc-db
## https://github.com/percona/percona-helm-charts/blob/main/charts/pxc-db/values.yaml


## Uncomment to pass in a mysql config file
  # configuration: |
  #   [mysqld]
  #   wsrep_debug=ON
  #   wsrep_provider_options="gcache.size=1G; gcache.recover=yes"
  resources:
    requests:
      memory: 1G
      cpu: 600m
    limits: {}
      # memory: 1G
      # cpu: 600m
  nodeSelector: {}
  #  disktype: ssd
  affinity:
    antiAffinityTopologyKey: "kubernetes.io/hostname"
    # advanced:
    #   nodeAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #       nodeSelectorTerms:
    #       - matchExpressions:
    #         - key: kubernetes.io/e2e-az-name
    #           operator: In
    #           values:
    #           - e2e-az1
    #           - e2e-az2
  podDisruptionBudget:
    # only one of maxUnavailable or minAvaliable can be set
    maxUnavailable: 1 # Instruct Kubernetes about the failed pods allowed quantity
    # minAvailable: 0
  persistence:
    enabled: true
    ## percona data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 8Gi

haproxy:
  enabled: true
  size: 3
  resources:
    requests:
      memory: 1G
      cpu: 600m
    limits: {}
      # memory: 1G
      # cpu: 600m
  nodeSelector: {}
  #  disktype: ssd
  # serviceAccountName: percona-xtradb-cluster-operator-workload
  affinity:
    antiAffinityTopologyKey: "kubernetes.io/hostname"
    # advanced:
    #   nodeAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #       nodeSelectorTerms:
    #       - matchExpressions:
    #         - key: kubernetes.io/e2e-az-name
    #           operator: In
    #           values:
    #           - e2e-az1
    #           - e2e-az2
  # only one of `maxUnavailable` or `minAvailable` can be set.
  podDisruptionBudget:
    maxUnavailable: 1
    # minAvailable: 0

logcollector:
  enabled: true
  resources:
    requests:
      memory: 100M
      cpu: 200m
    limits: {}

backup:
  enabled: true
  pitr:
    enabled: false
    storageName: s3-us-west-binlogs
    timeBetweenUploads: 60
    resources:
      requests: {}
      limits: {}
  storages: {}
    # fs-pvc:
    #   type: filesystem
    #   volume:
    #     persistentVolumeClaim:
    #       storageClassName: standard
    #       accessModes: ["ReadWriteOnce"]
    #       resources:
    #         requests:
    #           storage: 6Gi
    # s3-us-west:
    #   type: s3
    #   verifyTLS: true
    #   nodeSelector:
    #     storage: tape
    #     backupWorker: 'True'
    #   resources:
    #     requests:
    #       memory: 1G
    #       cpu: 600m
    #   affinity:
    #     nodeAffinity:
    #       requiredDuringSchedulingIgnoredDuringExecution:
    #         nodeSelectorTerms:
    #         - matchExpressions:
    #           - key: backupWorker
    #             operator: In
    #             values:
    #             - 'True'
    #   s3:
    #     bucket: S3-BACKUP-BUCKET-NAME-HERE
    #     # Use credentialsSecret OR credentialsAccessKey/credentialsSecretKey
    #     credentialsSecret: my-cluster-name-backup-s3
    #     #credentialsAccessKey: REPLACE-WITH-AWS-ACCESS-KEY
    #     #credentialsSecretKey: REPLACE-WITH-AWS-SECRET-KEY
    #     region: us-west-2
    #     endpointUrl: https://sfo2.digitaloceanspaces.com
  schedule: []
    # - name: "daily-backup"
    #   schedule: "0 0 * * *"
    #   keep: 5
    #   storageName: fs-pvc
    # - name: "sat-night-backup"
    #   schedule: "0 0 * * 6"
    #   keep: 3
    #   storageName: s3-us-west

secrets:
  ## You should be overriding these with your own or specify name for clusterSecretName.
  # passwords:
  #   root: insecure-root-password
  #   xtrabackup: insecure-xtrabackup-password
  #   monitor: insecure-monitor-password
  #   clustercheck: insecure-clustercheck-password
  #   proxyadmin: insecure-proxyadmin-password
  #   pmmserver: insecure-pmmserver-password
  #   # If pmmserverkey is set in that case pmmserver pass will not be included
  #   # pmmserverkey: set-pmmserver-api-key
  #   operator: insecure-operator-password
  #   replication: insecure-replication-password
  ## If you are using `cert-manager` you can skip this next section.
