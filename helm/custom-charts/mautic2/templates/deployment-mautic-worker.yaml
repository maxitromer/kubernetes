apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-mautic-worker
spec:
  replicas: {{ .Values.mautic.worker.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-mautic-worker
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-mautic-worker
    spec:
      volumes:
        - name: mautic-data-pvc
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-mautic-data-pvc
      containers:
      - name: mautic-worker
        image: "{{ .Values.mautic.image.repository }}:{{ .Values.mautic.image.tag }}"
        command: ["/bin/sh", "-c", "worker-entrypoint.sh"]
        resources:
          requests:
            cpu: {{ .Values.mautic.worker.resources.requests.cpu }}
            memory: {{ .Values.mautic.worker.resources.requests.memory }}
          limits:
            cpu: {{ .Values.mautic.worker.resources.limits.cpu }}
            memory: {{ .Values.mautic.worker.resources.limits.memory }}
        volumeMounts:
          - name: mautic-data-pvc
            mountPath: /var/www/html/config
            subPath: config
          - name: mautic-data-pvc
            mountPath: /var/www/html/var/logs
            subPath: logs
          - name: mautic-data-pvc
            mountPath: /var/www/html/docroot/media/files
            subPath: media/files
          - name: mautic-data-pvc
            mountPath: /var/www/html/docroot/media/images
            subPath: media/images
          - name: mautic-data-pvc
            mountPath: /opt/mautic/cron
            subPath: cron
        envFrom:
          - configMapRef:
              name: {{ $.Release.Name }}-mautic-configmap          
        env:
          - name: DOCKER_MAUTIC_ROLE
            value: mautic_worker
          - name: MAUTIC_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ $.Release.Name }}-db-pass
                key: password          