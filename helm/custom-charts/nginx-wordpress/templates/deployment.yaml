apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ $.Release.Namespace }}
  name: {{ $.Release.Name }}-nginx-wordpress
spec:
  {{- if not $.Values.global.autoscaling.enabled }}
  replicas: {{ .Values.global.replicas }}
  {{- end }}
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ $.Release.Name }}-nginx-wordpress
  template:
    metadata:
      labels:
        app: {{ $.Release.Name }}-nginx-wordpress
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            {{- if $.Values.global.preferToRunOnAMD64 }}
            - weight: 90
              preference:
                matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
            {{- end }}
            {{- if $.Values.global.preferNodeR711thenR912 }}
            - weight: 80
              preference:
                matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                  - r7-11
            - weight: 50
              preference:
                matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                  - r9-12
            {{- end }}
        {{- if $.Values.global.preferToDistributePods }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 50
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ $.Release.Name }}-nginx-wordpress
                topologyKey: "kubernetes.io/hostname"
        {{- end }}
      volumes:
        {{- if $.Values.nginx.customNginxConf.enabled }}
        - name: nginx-config
          configMap:
            name: {{ $.Release.Name }}-nginx-conf
        - name: nginx-default-config
          configMap:
            name: {{ $.Release.Name }}-default-conf
        - name: nginx-cache
          emptyDir: {}
        # - name: nginx-tmp
        #   emptyDir: {}          
        # - name: nginx-logs
        #   emptyDir: {}
        # - name: nginx-modules
        #   emptyDir: {}
        # - name: var-lib
        #   emptyDir: {}
        # - name: var
        #   emptyDir: {}                              
        {{- end }}
        - name: {{ $.Release.Name }}-wp-custom-php-ini
          configMap:
            name: {{ $.Release.Name }}-wp-custom-php-ini
        {{- if .Values.wordpress.externalStorage.enabled }}
        - name: {{ $.Release.Name }}-wp-content-pv
          persistentVolumeClaim:
            claimName: {{ $.Values.wordpress.externalStorage.pvcName }}
        {{- else }}
        {{- if .Values.wordpress.storage.enabled }}
        - name: {{ $.Release.Name }}-wp-content-pv
          persistentVolumeClaim:
            claimName: {{ $.Release.Name }}-wp-content-pvc
        {{- end }}
        {{- end }}
        {{- if or (eq .Values.database.mode "bitpoke") (eq .Values.database.mode "externalWithReplication") }}
        - name: db-cluster-config
          configMap:
            name: {{ $.Release.Name }}-db-cluster-config
        {{- end }}
        - name: php-fpm-config
          configMap:
            name: {{ $.Release.Name }}-php-fpm-config
      {{- if or (eq .Values.database.mode "bitpoke") (eq .Values.database.mode "externalWithReplication") }}
      initContainers:
        - name: init-wp-content
          image: {{ .Values.global.customImage }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Initializing wp-content..."
              cp -rn /var/www/html/wp-content/* /mnt/wp-content/
              chown -R 82:82 /mnt/wp-content
              chown -R 82:82 /mnt/nginx-cache
              chmod -R 755 /mnt/nginx-cache
              # chown -R :82 /mnt/nginx-tmp
              # chown -R :82 /mnt/nginx-logs
              # chown -R :82 /mnt/nginx-modules
              # chown -R :82 /mnt/var/lib
              # chown -R :82 /mnt/var
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: {{ $.Release.Name }}-wp-content-pv
              mountPath: /mnt/wp-content
            - name: nginx-cache
              mountPath: /mnt/nginx-cache
            # - name: nginx-tmp
            #   mountPath: /mnt/nginx-tmp
            # - name: nginx-logs
            #   mountPath: /mnt/nginx-logs
            # - name: nginx-modules
            #   mountPath: /mnt/nginx-modules
            # - name: var-lib
            #   mountPath: /mnt/var/lib
            # - name: var
            #   mountPath: /mnt/var
      {{- end }}
      containers:
        - name: nginx-wordpress
          image: {{ .Values.global.customImage }}
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          {{- if .Values.wordpress.wpCron.enabled }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              set -e;
              crond;
              echo "{{ .Values.wordpress.wpCron.frequency }} wget -q -O /dev/null http://127.0.0.1/wp-cron.php?doing_wp_cron" > /tmp/crontab;
              crontab /tmp/crontab;
              exec /usr/local/bin/custom-entrypoint.sh
          {{- end }}
          securityContext:
            capabilities:
              add:
              - SYS_PTRACE
          ports:
            - containerPort: 80
            - containerPort: 9000
          {{- if .Values.global.ReadinessAndLivenessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /wp-includes/images/blank.gif # Verifica si la imagen está disponible, lo que indica que wordpress está presente y nginx funcionando. Si no está disponible, no recibe tráfico, pero el pod sigue corriendo.
              port: 80
            {{- if eq (default "normal" $.Values.global.ReadinessAndLivenessProbe.websiteSpeed) "fast" }}
            initialDelaySeconds: {{ .Values.global.ReadinessAndLivenessProbe.readinessProbe.initialDelaySeconds | default 30 }}
            periodSeconds: {{ .Values.global.ReadinessAndLivenessProbe.readinessProbe.periodSeconds | default 5 }}
            failureThreshold: {{ .Values.global.ReadinessAndLivenessProbe.readinessProbe.failureThreshold | default 2 }}
            timeoutSeconds: {{ .Values.global.ReadinessAndLivenessProbe.readinessProbe.timeoutSeconds | default 3 }}
            successThreshold: {{ .Values.global.ReadinessAndLivenessProbe.readinessProbe.successThreshold | default 1 }}
            {{- else if eq (default "normal" $.Values.global.ReadinessAndLivenessProbe.websiteSpeed) "slow" }}
            initialDelaySeconds: {{ .Values.global.ReadinessAndLivenessProbe.readinessProbe.initialDelaySeconds | default 120 }}
            periodSeconds: {{ .Values.global.ReadinessAndLivenessProbe.readinessProbe.periodSeconds | default 20 }}
            failureThreshold: {{ .Values.global.ReadinessAndLivenessProbe.readinessProbe.failureThreshold | default 5 }}
            timeoutSeconds: {{ .Values.global.ReadinessAndLivenessProbe.readinessProbe.timeoutSeconds | default 10 }}
            successThreshold: {{ .Values.global.ReadinessAndLivenessProbe.readinessProbe.successThreshold | default 1 }}
            {{- else }}
            initialDelaySeconds: {{ .Values.global.ReadinessAndLivenessProbe.readinessProbe.initialDelaySeconds | default 60 }}
            periodSeconds: {{ .Values.global.ReadinessAndLivenessProbe.readinessProbe.periodSeconds | default 10 }}
            failureThreshold: {{ .Values.global.ReadinessAndLivenessProbe.readinessProbe.failureThreshold | default 3 }}
            timeoutSeconds: {{ .Values.global.ReadinessAndLivenessProbe.readinessProbe.timeoutSeconds | default 5 }}
            successThreshold: {{ .Values.global.ReadinessAndLivenessProbe.readinessProbe.successThreshold | default 1 }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /wp-admin/install.php # Esta página además requiere acceso a PHP, PHP-FPM y base de datos, por lo que detecta si hay errores en procesos críticos. Si falla, Kubernetes reinicia el contenedor.
              port: 80
            {{- if eq (default "normal" $.Values.global.ReadinessAndLivenessProbe.websiteSpeed) "fast" }}
            initialDelaySeconds: {{ .Values.global.ReadinessAndLivenessProbe.livenessProbe.initialDelaySeconds | default 30 }}
            periodSeconds: {{ .Values.global.ReadinessAndLivenessProbe.livenessProbe.periodSeconds | default 30 }}
            failureThreshold: {{ .Values.global.ReadinessAndLivenessProbe.livenessProbe.failureThreshold | default 2 }}
            timeoutSeconds: {{ .Values.global.ReadinessAndLivenessProbe.livenessProbe.timeoutSeconds | default 3 }}
            {{- else if eq (default "normal" $.Values.global.ReadinessAndLivenessProbe.websiteSpeed) "slow" }}
            initialDelaySeconds: {{ .Values.global.ReadinessAndLivenessProbe.livenessProbe.initialDelaySeconds | default 120 }}
            periodSeconds: {{ .Values.global.ReadinessAndLivenessProbe.livenessProbe.periodSeconds | default 30 }}
            failureThreshold: {{ .Values.global.ReadinessAndLivenessProbe.livenessProbe.failureThreshold | default 3 }}
            timeoutSeconds: {{ .Values.global.ReadinessAndLivenessProbe.livenessProbe.timeoutSeconds | default 10 }}
            {{- else }}
            initialDelaySeconds: {{ .Values.global.ReadinessAndLivenessProbe.livenessProbe.initialDelaySeconds | default 60 }}
            periodSeconds: {{ .Values.global.ReadinessAndLivenessProbe.livenessProbe.periodSeconds | default 30 }}
            failureThreshold: {{ .Values.global.ReadinessAndLivenessProbe.livenessProbe.failureThreshold | default 3 }}
            timeoutSeconds: {{ .Values.global.ReadinessAndLivenessProbe.livenessProbe.timeoutSeconds | default 5 }}
            {{- end }}
          {{- end }}
          volumeMounts:
              {{- if $.Values.nginx.customNginxConf.enabled }}
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: nginx-default-config
              mountPath: /etc/nginx/http.d/default.conf
              subPath: default.conf
            - name: nginx-cache
              mountPath: /var/www/html/wp-content/nginx-cache
            # - name: nginx-tmp
            #   mountPath: /var/lib/nginx
            # - name: nginx-logs
            #   mountPath: /var/lib/nginx/logs
            # - name: nginx-modules
            #   mountPath: /var/lib/nginx/modules
            # - name: var-lib
            #   mountPath: /var/lib
            # - name: var
            #   mountPath: /var
              {{- end }}
            {{- if or (eq .Values.database.mode "bitpoke") (eq .Values.database.mode "externalWithReplication") }}
            - name: db-cluster-config
              mountPath: /var/www/html/db-config.php
              subPath: db-config.php
            {{- end }}  
            - name: {{ $.Release.Name }}-wp-custom-php-ini
              mountPath: /usr/local/etc/php/conf.d/custom-conf
              readOnly: true
            - name: php-fpm-config
              mountPath: /usr/local/etc/php-fpm.d/zzz-custom.conf
              subPath: zzz-custom.conf

            {{- if or .Values.wordpress.storage.enabled .Values.wordpress.externalStorage.enabled }}
            - name: {{ $.Release.Name }}-wp-content-pv
              mountPath: /var/www/html/wp-content
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ $.Release.Name }}-wordpress-configmap
          env:
            - name: WORDPRESS_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  {{- if eq .Values.database.mode "default" }}
                  name: {{ $.Release.Name }}-default-db-pass
                  key: password
                  {{- else if eq .Values.database.mode "bitpoke" }}
                  name: {{ $.Release.Name }}-bitpoke-db-pass
                  key: password
                  {{- else if eq .Values.database.mode "externalWithReplication" }}
                  #############################################3
                  name: {{ $.Release.Name }}-external-replication-db-pass
                  #################################################3q
                  key: password
                  {{- end }}

          resources:
            {{- if .Values.resources.enableLimits }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            {{- end }}
            {{- if .Values.resources.enableRequests }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            {{- end }}
          {{- if $.Values.wordpress.removePreintalledPluginsAndThemes }}
          lifecycle:
            postStart:
              exec:
                command: 
                  - "/bin/sh"
                  - "-c"
                  - >
                    sleep 120 &&
                    rm -rf /var/www/html/wp-content/themes/twentytwentytwo &&
                    rm -rf /var/www/html/wp-content/themes/twentytwentythree &&
                    rm -rf /var/www/html/wp-content/plugins/akismet &&
                    rm -f /var/www/html/wp-content/plugins/hello.php &&
                    echo "Post-start script execution completed"
          {{- end }}  
