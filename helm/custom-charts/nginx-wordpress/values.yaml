# -- NOT TODO (FOR NOW) --

# Add metrics for prometheus
# Add the cloudflare DNS creation to the chart.
# add a RecurringJob for longhorn snapshots and backups

# -- TODO --


# -- DONE --

# Add the posibility to include the nginx server to the wordpress container (install nginx in the wordpress container) to use less resourses
# Add the user and database creation to the chart.
# Add the option for production or staging certificates for lets encrypt
# Include the bitpoke database and user creation
# make posible to use users and password secrets from other namespaces
# make posible to create namespaces for the wordpress instalations
# Solve the SSL certificate creation / validation problem
# When chart is uninstalled is important to keep the database, the user, and the grants.
# When the chats is uninstalled is important to keep the PV and the PVC with all the data.
# Add the posibility to select the type of container to use with nginx (the alpine with nginx intalled or the actual nginx container from docker but without the cache plugin)
# Add the posibility to change the URLs that not are cached on de default conf of nginx. The idea here is to exclude all the carts and checkouts.
# Add the psibility to split databases (read and write)
# add the posibility to keep the SSL certificate
# add the retail the PVC on deletion or uninstallation
# Add the option to keep the lets encrypt certificates when uninstall
# Add a nodeSelector to every pod in the deployment including los initContainers
# Add nodeaffinity to ensure pods are scheduled on r7-11 first
# Solve the www-redirect to domain problem


global:
  customImage: markitectos/production:custom_wp6.6.2-php8.3-fpm-alpine-v4
  imagePullPolicy : IfNotPresent # Always
  replicas: 1
  # Autoscaling require resource requests to work, limits are optional but recommended
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 6
    targetCPUUtilization: 70
  preferToDistributePods: true
  preferToRunOnAMD64: true
  preferNodeR711thenR912: true
  enableReadinessAndLivenessProbe: false


resources:
  enableLimits: false # false for unlimited resources
  limits:
    cpu: "2000m" # 0 for unlimited CPU
    memory: "2048Mi" # 0 for unlimited RAM
  enableRequests: true
  requests:
    cpu: "1000m"
    memory: "1024Mi"


 # The fastCGI cache only works on the original domain, the configured in general tab, in wordpress. Needs the Nginx Helper plugin to be installed.
domains:
  addWWW: true
  redirectWWWtoNonWWW: true # didn't work for subdomains, only for main domain, require addWWW: true
  names:
    -  t3.markitectos.com
    -  t4.markitectos.com  

SSLcertificate:
  productionReady: false  # on false will use letsencrypt-staging
  keepOnUninstall: false

nginx:
  customNginxConf:
    enabled: true
    clientMaxBodySizeMB: 100
    # The fastCGI cache only works on the original domain, the configured in general tab, in wordpress. Needs the Nginx Helper plugin to be installed.
    enableFastCGICache: true
    cacheSizeMB: 100
    removeInactiveItemsMinutes: 60
    dontCacheURLs: 
      - "/wp-admin/"
      - "/wp-json/"
      - "/xmlrpc.php"
      - "wp-.*.php"
      - "/feed/"
      - "index.php"
      - "sitemap(_index)?.xml"
      - "/cart/"
      - "/checkout/"
      - "/my-account/"    
    dontCacheCookies: 
      - "wordpress_test_cookie"
      - "comment_author_"
      - "woocommerce_cart_hash"
      - "woocommerce_items_in_cart"
      - "wp_woocommerce_session_"
      - "wordpress_[a-f0-9]+"
      - "wp-postpass"
      - "wordpress_no_cache"
      - "wordpress_logged_in"    
    enableBrowserCache: true
  NginxHelper:
    enablePath: true
    enableLogs: true

redis: 
  enabled: true
  debug: true
  disableConnectionForTroubleshooting: false
  analytics: true
  sentinelHost: valkey.cache.svc.cluster.local
  sentinelPort: 26379
  service: mymaster
  database: 0
  password: "rK#W4w&n4n2J^r9CWDT"

wordpress:
  # will enable WP_DEBUG in wp-config.php for logs in the container logs
  debug: true
  enableErrorDisplay: true
  https: true
  DisableAutoUpdate: true
  # this increase too much the time to start the pod
  removePreintalledPluginsAndThemes: false 
  enableMemcached: false
  customPHPini:
    enabled: true
    uploadMaxFilesize: 100M
    postMaxSize: 100M
    memoryLimit: 256M
    maxExecutionTime: 600
    maxInputVars: 1000
    maxInputTime: 400 
  storage:
    enabled: true
    accessModes: ReadWriteMany
    class: longhorn-raid-ssd-cached-3-replicas
    # You only can increase the value of the size and if you do you will have to delete the pod for the resize take effect.
    size: 2Gi
    keepOnUninstall: false
  database:
    host: percona-db-pxc-db-haproxy-replicas.percona.svc.cluster.local:3306
    name: whoami_markitectos
    user: whoami_markitectos_user
    ## To create the password key to set this run # echo -n '<your_actual_password>' | base64
    SecretPasswordKey: TWF4aTE0NjUh

# This will disable the external database parameters
bitpokeDB:
  enabled: true
  namespace: databases
  clusterName: my-cluster
  ## To create the password key to set this run # echo -n '<your_actual_password>' | base64
  secretPasswordKey: TWF4aTE0NjUh
  keepOnUninstall: false

